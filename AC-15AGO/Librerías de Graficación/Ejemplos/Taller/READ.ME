Explicacion de partes del codigo
canvas: se referencia al objeto canvas en HTML usando el ID mi canvas, es como el fondo en el que se pueden dibujar las diferentes figuras.
ctx es la abreviacion de context e indica que se obtiene el contexto del canvas, es basicamente los metodos y propiedades que hcaen que el canvas funcione de manera correcta sin errores.
xcirculo y ycirculo: las coordenadas del circulo en el eje x & y, son las coordenadas en ambos ejes del circulo que se usan para ubicarlo en el canvas, en el codigo se usa 150 y 150.
radioCirculo: El radio del circulo que define el tamaño del mismo, siendo la mitad del diametro, por ejemplo si se dice que el radio es 2, se le aumenta 2 pixeles en todas las direcciones haciendo el circulo
xcuadrado & ycuadrado, las coordenadas en los dos ejes del plano cartesiano, estas estan en la esquina izquierda superior del cuadrado y lo ubican en el canvas siendo en el codigo de 300 ambas
tamaño cuadrado, pone tamaño del cuadrado en pixeles, segun los indicados pone las mismas cantidades en vertical y en horizontal para que quede simetrico
Dibujar:
ctx.beginPath(), significa iniciar un nuevo camino e indica que se empieza una nueva figura de lo contrario afectaria a otras anteriores
ctx.arc(xCirculo,ycirculo, radioCirculo, 0, Math.PI*2) 
 - xcirculo y circulo, es el centro del circulo
 - radiocirculo el radio del circulo
 -para cuadrado solo se busca el centro y es con x cuadrado, y cuadrado
 - 0 a MathPI indicaa inicio del circulo hasta el final del circulo siendo representado por el 2PI
 - ctx.fillstyle:  Define el color de relleno del circulo
 - ctx.fill Rellena el circulo con el color escogido en fillstyle
 - ctx.strokeStyle: define el color del borde, puede ser el que uno quiera como pink
 - ctx.stroke() Dibuja el borde con el color seleccionado
#canvas pone un borde negro de un pixel alrededor del canvas
#dibujarBTN Define los estilos del boton de dibujar, siendo de fondo amarillo, borde azul y fuente de 16px
 display: flex; align-items: center y justify-contetn center ponen el boton centrado
dibujarbtn i. dibuja el icono del boton
.coordenadas: oculta las coordenadas en display none
Para seleccionar figuras
titulo esta con h2 <strong> que le da negrita
<form onsubmit="dibujarFigura(event)">: pone un formulario que ejecuta la función JS de dibujarFigura(event).
Se puede elegir entre circulo, cuadrado triangulo y estrella
Personalizacion:
Para el color y borde se selecciona mediante un selector de color por(<input type="color">)
El grosor del borde define la cantidad d grueso por pixeles (<input type="number>)
se puede escoger coordenada polar o cartesiana
cartesiana: x,y
polar: campos por radio y angulo visible si solo se selecciona
tamaño: escoje el tamaño de la figura en pixeles
boton dibujar. envia la instruccion finalizada
El canvas tiene un alto y ancho de 500 px
y se relaciona con el archivo js con: <script src="scripts.js"></script>
El html se encarga de realizar la parte externa en la que es interaccion con el usuario y personalizacion
para j.s
mostrarcampocoordenadas:
Esta funcion maneja la visibilidad de los campos de coordenadas en funcion de las coordenas que se escogieron (polar o cartesiana)
tipocoordenadas: obtiene el valor de coordenadas del usuario que puede ser cartesiana, polar o ninguna
si se selecciona cartesiana o polar  hace referencia a lo que se escribio en  html de eso
hay un if-else en donde
-si el usuario escoje cartesianas se muestra el formulario de cartesianas con style.display = block, y se oculta la polar con style.display =none
Sucede lo mismo con las polares pero al reves, se pone block para el polar pero se pone none para cartesiano
Funcion convertirApolares
Convierte las coordenadas de radio y angulo a cartesianas, para que pueda estar en el canvas
radianes. Convierte el angulo de grados a radianes para usarlo en funciones trigonometricas
x, y: calcula las coordenas con la formula: x= radio*cos(angulo) y con y es igual pero con sin
return{x,y} lo devuelve calculado
Funcion dibujar figura. Lo que hace es dibujar la figura que deseas dentro de las opciones
event.preventdefault() previene la recarga de la pagina al reenviar el formulario
obtencion de valores: se obtienen valores del usuario
ctx: el contexto del canvas
ctx.clearRect() limpia el canvas eliminando cualquier figura anterior para dibujar la figura que quieras
ctx.save() y ctx.restore() se guarda y restaura el estado del momento del canvas, para poder hacer transformaciones como modificar el tamaño o moverla
Auxiliares figura:
angle: calcula el angulo entre los vertices del poligono
ctxmoveto() y ctx.lineTo() traza lineas en los puntos calculados para hacer los lados de la figura
DIBUJAR ESTRELLA
angle: calcula el angulo entre los puntos de la estrella
alternancia radios: alterna entre el radio externo e interno para hacer las puntas de las estrellas y las puntas internas o valles
ctx.lineto() dibuja lineas conectando los puntos de las estrellas
ctx.closepath()cierra la figura uniendo el ultimo punto con el primero
PENTAGONO
se usa el radio para determinar el tamaño de la figura
se pone 5 lados y se grafica con la ayuda de la extension de lados en el codigo
angle. Calcula el angulo entre los vertices del pentagono, se divide 2 PI/5 que eson los lados dando el angulo de cada uno
ctx.moveTO Mueve el lapiz al primer vertice del penatagono
ctx.line.to(): traza lineas hacia el sigiente vertice usando las coordenadas cartesianas convertidas o no, 
ctx.closepath() cierra el pentagono conectandolo con el ultimo vertice
TRIANGULO
Esta tambien en la funcion de dibujar figura
ctx.moveto (0-tamaño) mueve el lapiz al primer vertice del triangulo
ctx.line to(-tamaño, tamaño/2) lo mueve al segundo vertice que es abajo a la izquierda del origen
para la derecha es igual solo que se quita el - del -tamaño para ubicarlo derecha hacia abajo
por ultimo sepone ctx.closepath() que cierra el triangulo
